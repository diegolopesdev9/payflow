TAREFA: Corrigir endpoint PUT /api/bills/:id no server/routes.ts para converter campos camelCase para snake_case.

INSTRU√á√ïES CR√çTICAS:
- MODIFIQUE APENAS server/routes.ts
- N√ÉO modifique nenhum outro arquivo
- Mostre o diff antes de aplicar
- Aguarde confirma√ß√£o

PROBLEMA IDENTIFICADO:
O endpoint PUT /api/bills/:id (linha 166) passa o body direto para storage.updateBill sem converter campos. Quando frontend envia { isPaid: true }, precisa converter para { is_paid: true } antes de enviar ao Supabase.

ARQUIVO A MODIFICAR: server/routes.ts

LOCALIZAR (aproximadamente linha 166-171):

app.put("/api/bills/:id", requireUser, async (c: Context) => {
  const id = c.req.param("id");
  const body = await c.req.json();
  const bill = await storage.updateBill(id, body);
  if (!bill) return c.json({ error: "Conta n√£o encontrada" }, 404);
  return c.json(bill);
});

SUBSTITUIR COMPLETAMENTE POR:

app.put("/api/bills/:id", requireUser, async (c: Context) => {
  console.log('\nüîµ PUT /api/bills/:id - IN√çCIO');
  
  const id = c.req.param("id");
  const body = await c.req.json();
  
  console.log('üì¶ body recebido:', JSON.stringify(body, null, 2));
  
  // Converter de camelCase (frontend) para snake_case (banco)
  const updateData: any = {};
  
  if (body.name !== undefined) updateData.name = body.name;
  if (body.amount !== undefined) updateData.amount = body.amount;
  if (body.dueDate !== undefined) updateData.due_date = body.dueDate;
  if (body.isPaid !== undefined) updateData.is_paid = body.isPaid;
  if (body.paidAt !== undefined) updateData.paid_at = body.paidAt;
  if (body.categoryId !== undefined) updateData.category_id = body.categoryId;
  if (body.description !== undefined) updateData.description = body.description;
  
  console.log('üìÑ updateData convertido:', JSON.stringify(updateData, null, 2));
  console.log('üìû Chamando storage.updateBill...');
  
  try {
    const bill = await storage.updateBill(id, updateData);
    
    if (!bill) {
      console.log('‚ùå Bill n√£o encontrado');
      return c.json({ error: "Conta n√£o encontrada" }, 404);
    }
    
    console.log('‚úÖ Bill atualizado:', bill);
    
    // Converter resposta para camelCase usando fun√ß√£o existente
    return c.json(convertBillToFrontend(bill));
  } catch (error) {
    console.error('‚ùå ERRO ao atualizar bill:', error);
    throw error;
  }
});

EXPLICA√á√ÉO:
- Converte isPaid ‚Üí is_paid antes de salvar no banco
- Usa convertBillToFrontend() que j√° existe no arquivo
- Adiciona logs para debugging (igual ao POST)
- Mesma l√≥gica de convers√£o do POST que j√° funciona

VALIDA√á√ÉO:
Ap√≥s aplicar, reiniciar servidor: pkill -f node && npm run start

N√ÉO MODIFIQUE MAIS NADA. Mostre o diff e aguarde confirma√ß√£o.