TAREFA: Ajustar visual dos cards no Bills.tsx para seguir o padr√£o do Dashboard - limpo, sem emojis, minimalista.

INSTRU√á√ïES CR√çTICAS:
- MODIFIQUE APENAS src/pages/Bills.tsx
- Mostre o diff antes de aplicar
- Aguarde confirma√ß√£o

OBJETIVO:
Manter visual consistente com o Dashboard (cards simples, sem emojis, badges minimalistas).

ARQUIVO: src/pages/Bills.tsx

LOCALIZAR a se√ß√£o do Card (dentro de sortedBills.map) e SUBSTITUIR o CardContent completo:

LOCALIZAR:
<CardContent className="p-4">
  <div className="flex items-center gap-4">
    {/* Checkbox - impede propaga√ß√£o do clique */}
    <div onClick={(e) => e.stopPropagation()}>
      ...
    </div>

    {/* Conte√∫do principal */}
    <div className="flex-1 min-w-0">
      <div className="flex items-center justify-between mb-2">
        <h3 className="font-semibold text-lg text-primary-foreground">
          {bill.name}
        </h3>
        <span className={`font-bold text-xl ${bill.isPaid ? 'line-through text-primary-foreground/70' : 'text-accent'}`}>
          {bill.formattedAmount}
        </span>
      </div>

      <div className="flex flex-wrap items-center gap-3 text-sm">
        <div className="flex items-center gap-1 text-primary-foreground/70">
          <Calendar className="w-4 h-4" />
          <span>{bill.formattedDueDate}</span>
        </div>

        <div className="flex items-center gap-1 text-primary-foreground/70">
          <Tag className="w-4 h-4" />
          <span>{bill.categoryName}</span>
        </div>

        {!bill.isPaid && bill.daysLeft <= 7 && (
          <Badge
            variant={bill.priority === 'high' ? 'destructive' : 'default'}
            className="text-xs"
          >
            {bill.daysLeft === 0 ? 'üî• Vence hoje' :
             bill.daysLeft === 1 ? '‚ö†Ô∏è Vence amanh√£' :
             bill.daysLeft < 0 ? `‚ùå Atrasada ${Math.abs(bill.daysLeft)}d` :
             `üìÖ ${bill.daysLeft} dias`}
          </Badge>
        )}

        {bill.isPaid && (
          <Badge className="bg-green-500/20 text-green-400 border-green-500/30 text-xs">
            ‚úì Paga
          </Badge>
        )}
      </div>
    </div>
  </div>
</CardContent>

SUBSTITUIR POR:

<CardContent className="p-4">
  <div className="flex items-center gap-4">
    {/* Checkbox */}
    <div onClick={(e) => e.stopPropagation()}>
      <button
        onClick={() => handleTogglePaid(bill.id, bill.isPaid)}
        disabled={togglePaidMutation.isPending}
        className="shrink-0 hover:scale-110 transition-transform"
      >
        {bill.isPaid ? (
          <CheckCircle2 className="w-6 h-6 text-green-500" />
        ) : (
          <Circle className="w-6 h-6 text-primary-foreground/40 hover:text-primary-foreground/60" />
        )}
      </button>
    </div>

    {/* Conte√∫do principal */}
    <div className="flex-1 min-w-0">
      <div className="flex items-center justify-between mb-2">
        <h3 className="font-semibold text-lg text-primary-foreground">
          {bill.name}
        </h3>
        <span className={`font-bold text-xl ${bill.isPaid ? 'line-through text-primary-foreground/70' : 'text-accent'}`}>
          {bill.formattedAmount}
        </span>
      </div>

      <div className="flex flex-wrap items-center gap-3 text-sm text-primary-foreground/70">
        <div className="flex items-center gap-1">
          <Calendar className="w-4 h-4" />
          <span>{bill.formattedDueDate}</span>
        </div>

        <div className="flex items-center gap-1">
          <Tag className="w-4 h-4" />
          <span>{bill.categoryName}</span>
        </div>

        {!bill.isPaid && bill.daysLeft <= 7 && (
          <Badge
            variant={bill.priority === 'high' ? 'destructive' : 'default'}
            className="text-xs"
          >
            {bill.daysLeft === 0 ? 'Vence hoje' :
             bill.daysLeft === 1 ? 'Vence amanh√£' :
             bill.daysLeft < 0 ? `Atrasada ${Math.abs(bill.daysLeft)}d` :
             `${bill.daysLeft} dias`}
          </Badge>
        )}

        {bill.isPaid && (
          <Badge className="bg-green-500/20 text-green-300 border-green-500/30 text-xs">
            Paga
          </Badge>
        )}
      </div>
    </div>
  </div>
</CardContent>

EXPLICA√á√ÉO DAS MUDAN√áAS:
1. ‚úÖ REMOVIDOS todos os emojis (üî•, ‚ö†Ô∏è, ‚ùå, üìÖ, ‚úì)
2. ‚úÖ Badges minimalistas: apenas texto simples
3. ‚úÖ Visual limpo e profissional como o Dashboard
4. ‚úÖ Mant√©m funcionalidade: clique no card abre detalhes, checkbox marca como pago
5. ‚úÖ Mant√©m borda colorida (verde=paga, vermelha=urgente, amarela=pr√≥ximo)

VALIDA√á√ÉO:
Ap√≥s aplicar, verificar que:
1. Badges n√£o t√™m emojis
2. Visual limpo e profissional
3. Clique no card abre detalhes
4. Checkbox funciona normalmente

N√ÉO MODIFIQUE MAIS NADA. Mostre o diff e aguarde confirma√ß√£o.