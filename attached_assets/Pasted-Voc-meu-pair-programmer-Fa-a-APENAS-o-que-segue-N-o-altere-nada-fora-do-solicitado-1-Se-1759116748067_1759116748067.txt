Você é meu pair programmer. Faça APENAS o que segue. ⚠️ Não altere nada fora do solicitado.

1) Se ainda não existir `server/auth.ts`, CRIE com este conteúdo. 
   Se já existir, NÃO reescreva tudo: apenas garanta que exporta `requireUser` e `getUser` e, por compatibilidade, `export const authenticateToken = requireUser`.

-------------------------------------------------------
import { createClient } from "@supabase/supabase-js";
import type { Context, Next } from "hono";

const supabaseAdmin = createClient(
  process.env.SUPABASE_URL!,
  process.env.SUPABASE_SERVICE_ROLE_KEY!
);

export async function requireUser(c: Context, next: Next) {
  const auth = c.req.header("authorization") || "";
  const token = auth.startsWith("Bearer ") ? auth.slice(7) : null;

  if (!token) {
    return c.json({ error: "missing bearer token" }, 401);
  }

  const { data, error } = await supabaseAdmin.auth.getUser(token);
  if (error || !data?.user) {
    console.error("[requireUser] invalid token:", error?.message);
    return c.json({ error: "invalid token" }, 401);
  }

  // @ts-ignore  (armazenar no contexto do Hono)
  c.set("user", data.user);
  await next();
}

export function getUser(c: Context) {
  // @ts-ignore
  return c.get("user");
}

// Alias de compatibilidade (se alguém ainda importar):
export const authenticateToken = requireUser;
-------------------------------------------------------

2) Em `server/routes.ts` (ou onde você registra as rotas DO APP), adicione APENAS as rotas abaixo, sem mexer nas outras rotas já existentes:

- Imports no topo:
  import { requireUser, getUser } from "./auth";

- Rota pública de saúde:
  app.get("/api/healthz", (c) => c.json({ ok: true, time: new Date().toISOString() }));

- Rota protegida de diagnóstico:
  app.get("/api/whoami", requireUser, (c) => c.json({ user: getUser(c) }));

- Rota protegida para a tela de Perfil, devolvendo um shape estável:
  app.get("/api/users/me", requireUser, (c) => {
    const u: any = getUser(c);
    const user = {
      id: u.id,
      email: u.email,
      name:
        u.user_metadata?.full_name ??
        u.user_metadata?.name ??
        (u.email ? u.email.split("@")[0] : "Usuário"),
      avatar_url: u.user_metadata?.avatar_url ?? null,
      metadata: u.user_metadata ?? {}
    };
    return c.json({ user });
  });

Mostre o DIFF e AGUARDE minha confirmação ANTES de aplicar. ⚠️ Não altere nada fora do solicitado.
