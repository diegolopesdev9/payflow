// prisma/schema.prisma - VERS√ÉO COMPLETA FUNCIONAL

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ===================================
// MODELS
// ===================================

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  bills      Bill[]
  categories Category[]

  @@map("users")
}

model Category {
  id        String   @id @default(uuid())
  name      String
  color     String?
  icon      String?
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  bills Bill[]

  @@unique([userId, name])
  @@map("categories")
}

model Bill {
  id          String   @id @default(uuid())
  name        String
  amount      Int
  due_date    DateTime @map("due_date")
  is_paid     Boolean  @default(false) @map("is_paid")
  user_id     String   @map("user_id")
  category_id String?  @map("category_id")
  description String?
  created_at  DateTime @default(now()) @map("created_at")

  user     User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [category_id], references: [id], onDelete: SetNull)

  @@index([user_id, due_date])
  @@index([user_id, is_paid])
  @@map("bills")
}